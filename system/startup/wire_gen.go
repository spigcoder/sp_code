// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package startup

import (
	"github.com/gin-gonic/gin"
	"github.com/spigcoder/sp_code/system/ioc"
	"github.com/spigcoder/sp_code/system/repository"
	"github.com/spigcoder/sp_code/system/repository/cache"
	"github.com/spigcoder/sp_code/system/repository/dao"
	"github.com/spigcoder/sp_code/system/service"
	"github.com/spigcoder/sp_code/system/web"
)

// Injectors from wire.go:

func InitWebServer() *gin.Engine {
	db := ioc.InitDB()
	sysUserDao := dao.NewSysUserDaoImpl(db)
	cmdable := ioc.InitRedis()
	sysUserCache := cache.NewSysUserCacheImpl(cmdable)
	sysUserRepository := repository.NewSysUserRepositoryImpl(sysUserDao, sysUserCache)
	sysUserService := service.NewSysUserServiceImpl(sysUserRepository)
	sysUserHandler := web.NewSysUserHandler(sysUserService)
	questionDao := dao.NewQuestionDaoImpl(db)
	qestionRepository := repository.NewQuestionRepositoryImpl(questionDao)
	questionService := service.NewQuestionServiceImpl(qestionRepository)
	questionHandler := web.NewQuestionHandler(questionService)
	engine := ioc.InitWeb(sysUserHandler, questionHandler, cmdable)
	return engine
}
